{"id":"jcbM","dependencies":[{"name":"C:\\Users\\39351\\Progetti\\SolidProject\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\logout\\GeneralLogoutHandler.js.map","includedInParent":true,"mtime":1671123281684},{"name":"C:\\Users\\39351\\Progetti\\SolidProject\\node_modules\\@inrupt\\solid-client-authn-browser\\src\\logout\\GeneralLogoutHandler.ts","includedInParent":true,"mtime":1671123281754},{"name":"C:\\Users\\39351\\Progetti\\SolidProject\\package.json","includedInParent":true,"mtime":1671127455006},{"name":"C:\\Users\\39351\\Progetti\\SolidProject\\node_modules\\@inrupt\\solid-client-authn-browser\\package.json","includedInParent":true,"mtime":1671123281699}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});class e{constructor(e){this.sessionInfoManager=e}async canHandle(){return!0}async handle(e){await this.sessionInfoManager.clear(e)}}exports.default=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":0}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":13}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":20}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":35}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":43}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":56}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":57}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":64}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":68}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":21},"generated":{"line":1,"column":74}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":1,"column":76}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":36,"column":22},"generated":{"line":1,"column":88}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":36,"column":22},"generated":{"line":1,"column":91}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":36,"column":22},"generated":{"line":1,"column":96}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":36,"column":22},"generated":{"line":1,"column":115}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":1,"column":117}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":1,"column":135}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":39,"column":11},"generated":{"line":1,"column":142}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":1,"column":144}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":42,"column":15},"generated":{"line":1,"column":157}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":43,"column":10},"generated":{"line":1,"column":166}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":43,"column":15},"generated":{"line":1,"column":171}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":1,"column":190}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":43,"column":40},"generated":{"line":1,"column":196}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":200}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":208}},{"source":"../../src/logout/GeneralLogoutHandler.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":216}}],"sources":{"../../src/logout/GeneralLogoutHandler.ts":"/*\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * @hidden\r\n * @packageDocumentation\r\n */\r\n\r\nimport {\r\n  ILogoutHandler,\r\n  ISessionInfoManager,\r\n} from \"@inrupt/solid-client-authn-core\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport default class GeneralLogoutHandler implements ILogoutHandler {\r\n  constructor(private sessionInfoManager: ISessionInfoManager) {}\r\n\r\n  async canHandle(): Promise<boolean> {\r\n    return true;\r\n  }\r\n\r\n  async handle(userId: string): Promise<void> {\r\n    await this.sessionInfoManager.clear(userId);\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"22268543f91a1090d27516e69321fd41","cacheData":{"env":{}}}