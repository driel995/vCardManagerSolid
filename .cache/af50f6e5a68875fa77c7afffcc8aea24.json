{"dependencies":[{"name":"C:\\Users\\39351\\Progetti\\Node\\SolidTest\\package.json","includedInParent":true,"mtime":1670177358204},{"name":"C:\\Users\\39351\\Progetti\\Node\\SolidTest\\node_modules\\queue-microtask\\package.json","includedInParent":true,"mtime":1670176663842}],"generated":{"js":"var global = arguments[3];\n/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","map":{"mappings":[{"source":"node_modules\\queue-microtask\\index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\queue-microtask\\index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\queue-microtask\\index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\queue-microtask\\index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\queue-microtask\\index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\queue-microtask\\index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\queue-microtask\\index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\queue-microtask\\index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\queue-microtask\\index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\queue-microtask\\index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}}],"sources":{"node_modules\\queue-microtask\\index.js":"/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n"},"lineCount":11}},"hash":"92d50b6ac6670ace1773b4beeade2969","cacheData":{"env":{}}}